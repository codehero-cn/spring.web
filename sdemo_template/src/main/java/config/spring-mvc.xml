<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context.xsd  
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--Spring MVC的配置文件严格限制只初始化Controller层实例  -->
    
	<!-- 开启组件扫描 -->
	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="spring.web.annotation" />
	<context:component-scan base-package="spring.web.data" />
	<context:component-scan base-package="spring.web.file.*" />
	<context:component-scan base-package="cn.codehero.spring.web.spring" />
	<context:component-scan base-package="cn.codehero.spring.web.velocity" />
	<context:component-scan base-package="spring.web.jdbc" />
	<context:component-scan base-package="cn.codehero.spring.web.hibernate.*" />
	<!-- 允许定义过滤器将基包下的某些类纳入或排除  -->
    <context:component-scan base-package="cn.codehero.test">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 
    </context:component-scan>  
	
	<!-- 开启注解,如果配置了mvc:resources，则一定要配置此项  -->
	<mvc:annotation-driven />
	
	<!-- 启用AspectJ对Annotation的支持 -->
    <!--   <aop:aspectj-autoproxy proxy-target-class="true"/> -->
    
    <!--配置<mvc:default-servlet-handler />后，会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。
    一般Web应用服务器默认的Servlet名称是"default"，因此DefaultServletHttpRequestHandler可以找到它。如果你所有的Web应用服务器的默认Servlet名称不是"default"，则需要通过default-servlet-name属性显示指定：
    <mvc:default-servlet-handler default-servlet-name="所使用的Web服务器默认使用的Servlet名称" />
	有下面welcome-file-list才会起作用 -->
	<mvc:default-servlet-handler/>
	
	<!-- 静态资源路径 -->
	<!--此test用于开发测试用的 -->
	<mvc:resources location="/img/" mapping="/img/**" />
	<!-- <mvc:resources location="/script/" mapping="/script/**" /> -->
	<mvc:resources location="/js/" mapping="/js/**" />
    
    
		
    <!--使用xml来配置url-controller  -->
	<bean name="/controller/hellocontroller" class="spring.web.controller.HelloController" />
	<bean name="/controller/multi" class="spring.web.controller.MultiController">
		<property name="methodNameResolver">
			<ref bean="paramMethodResolver" />
		</property>
	</bean>
	<bean name="/controller/img" class="spring.web.controller.StaticController">
		<property name="methodNameResolver">
			<ref bean="paramMethodResolver" />
		</property>
	</bean>


    <!-- 配置视图解析器jsp视图解析器--> 
	<bean id="viewResolver"  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>  
		<property name="prefix" value="/"></property>
		<property name="suffix" value=".jsp"></property>
	    <!-- 这个配置表示解析器的优先级别,注意：InternalResourceViewResolver必须总是赋予最低的优先级(最大的order值),
	        因为不管返回什么视图名称，它都将解析视图。如果它的优先级高于其它解析器的优先级的话，它将使得其它具有较
	        低优先级的解析器没有机会解析视图。 -->
        <property name="order" value="10"/>
    </bean> 
    
	<!-- 方法名称解析器 -->
	<bean id="paramMethodResolver"
		class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
		<property name="paramName" value="action"></property>
	</bean>
	<!-- 要commons.io和commons.fileupload包 -->
	
	<!-- 配置多请求数据类型，如json xml-->
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	     <!-- set the max upload size10MB -->
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760" />
		<property name="maxInMemorySize" value="10240" />
	</bean>
	
	
	
	<!-- velocity视图解析器 -->
    <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="cache" value="true"/>
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="prefix" value="/"/>
        <property name="suffix" value=".vm"/>
    </bean>
	
	
	 <!--  FreeMarker ViewResolver Configuration -->
	  <!-- 
    <bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
        <property name="order" value="0" />
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>  
         <property name="cache" value="true" />  
         <property name="prefix" value="/WEB-INF/ftl/" /> 
        <property name="suffix" value=".ftl" />  
        <property name="contentType" value="text/html;charset=UTF-8"></property>  
        <property name="requestContextAttribute" value="request" />  
        <property name="exposeSpringMacroHelpers" value="true" />  
        <property name="exposeRequestAttributes" value="true" />  
        <property name="exposeSessionAttributes" value="true" />  
         
    </bean> 
     -->
    
    <!-- FreeMarker Configuration -->
     <!--      
    <bean id="freemarkerConfig"  class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">  
       <property name="configLocation" value="/WEB-INF/freemarker.properties"/>
        <property name="templateLoaderPath" value="/WEB-INF/ftl/"/>  
         <property name="freemarkerVariables">
             <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
         </property>
           <property name="freemarkerSettings">  
            <props>  
                <prop key="template_update_delay">0</prop>  
                <prop key="default_encoding">UTF-8</prop>  
                <prop key="number_format">0.##########</prop>  
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>  
                <prop key="classic_compatible">true</prop>  
                <prop key="template_exception_handler">ignore</prop>  
            </props>  
        </property>  
    </bean>   
    
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
	 <bean>  
	 -->
	  <!-- 配置Controller拦截器 -->
	<!--   <mvc:interceptors>
            <mvc:interceptor>
	       </mvc:interceptor>
             <mvc:interceptor>
             </mvc:interceptor>
        </mvc:interceptors> -->
        
        <!-- 切面配置：Controller方法参数校验 -->
        <!-- <bean class="com.qding.base.aspect.ParameterValidateAspect" /> -->
        
        
</beans>	
	